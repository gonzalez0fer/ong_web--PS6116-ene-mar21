"""
Django settings for ong_web project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
import environ
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

PROJECT_ROOT = os.path.dirname(__file__)
sys.path.insert(0, os.path.join(PROJECT_ROOT, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# Vars that sets the environment settings

env = environ.Env()
environ.Env.read_env()


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('ONG_SECRET_KEY')

# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

INSTALLED_APPS = [
    'apps.main.users.apps.UsersConfig',
    'apps.main.refectories.apps.RefectoriesConfig',
    'apps.main.cupboards.apps.CupboardsConfig',
    'apps.main.cupboard_managements.apps.CupboardManagementsConfig',
    'apps.main.water_tanks.apps.WaterTanksConfig',
    'apps.main.water_managements.apps.WaterManagementsConfig',
    'apps.main.suppliers.apps.SuppliersConfig',
    'apps.main.maintenance.apps.MaintenanceConfig',
    'apps.main.products.apps.ProductsConfig',
    'apps.main.product_managements.apps.ProductManagementsConfig',
    'apps.main.equipments.apps.EquipmentsConfig',
    'apps.main.notifications.apps.NotificationsConfig',
    'apps.main.dollar_rates.apps.DollarRatesConfig',
    'django_celery_beat'
]

THIRD_PARTY_APPS = [
    'extra_views',
    'widget_tweaks',
]

INSTALLED_APPS = INSTALLED_APPS + DJANGO_APPS + THIRD_PARTY_APPS

AUTH_USER_MODEL = 'users.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ong_web.urls'

LOGIN_REDIRECT_URL = "home"   # Route defined in app/urls.py
LOGOUT_REDIRECT_URL = "home"  # Route defined in app/urls.py
TEMPLATE_DIR = os.path.join(BASE_DIR, "ong_web/templates")  # ROOT dir for templates
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ong_web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': env.str('ONG_DB_NAME'),
        'USER': env.str('ONG_DB_USER'),
        'PASSWORD': env.str('ONG_DB_PASSWORD'),
        'HOST': env.str('ONG_DB_HOST'),
        'PORT': env.str('ONG_DB_PORT')
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'es-ve'

TIME_ZONE = 'America/Caracas'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/


BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
STATIC_ROOT = os.path.join(BASE_DIR, 'ong_web/staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'ong_web/static'),
)

CELERY_IMPORTS = ("apps.main.tasks",)

from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {

    "web_scrapping_task": {
        "task": "apps.main.tasks.web_scrapping_BCV",
        "schedule": crontab(minute=0, hour=13),
    },
    "maintenance_check_task": {
        "task": "apps.main.tasks.maintenance_daily_checks",
        "schedule": crontab(minute=0, hour=12),
    }
}